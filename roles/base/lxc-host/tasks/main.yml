- name: os specific variables
  include_vars: "{{ ansible_lsb.id|lower() }}_{{ ansible_lsb.codename }}.yml"
  tags:
    - lxc-host


- include: packages_debian.yml
  when: ansible_os_family == 'Debian'
  tags:
    - lxc-host


- name: default lxc-net
  template: >
    src=default_lxc_net.j2
    dest=/etc/default/lxc-net
    mode=0644
    owner=root
    group=root
  notify: restart lxc-net
  tags:
    - lxc-host


- name: default.conf
  template: >
    src=default.conf
    dest=/etc/lxc/default.conf
    mode=0644
    owner=root
    group=root
  notify: restart lxc-net
  tags:
    - lxc-host


- name: ovsup script
  template: >
    src=ovsup.j2
    dest=/etc/lxc/ovsup
    mode=0755
    owner=root
    group=root
  tags:
    - lxc-host


- name: add python-apt and lsb-release packages to debian template
  lineinfile: >
    dest=/usr/share/lxc/templates/lxc-debian
    insertafter='^ifupdown,'
    line='python-apt,lsb-release,\'
    backup=yes
  register: debian_template
  tags:
    - lxc-host


- name: remove debian cache directory
  file: >
    path=/var/cache/lxc/debian
    state=absent
  when: debian_template.changed
  tags:
    - lxc-host


# Generate a random mac address (ensure that first number is even)
# openssl rand -hex 6 | sed 's/\(..\)/\1:/g; s/.$//'

# Clone a vm
# lxc-clone -o play_fresh -n play1
#
# Destroy and recreate a vm from scratch
# lxc-kill -n play1; lxc-destroy -n play1; lxc-create -t ubuntu -n play1
#
# Regen ansible config and then start the vm
# lxc-start -d -n play1


- { include: instance_remove.yml }

- { include: instance.yml }
