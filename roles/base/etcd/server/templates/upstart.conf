# {{ ansible_managed }}
{% set ETCD = 'etcd-server' %}
{% set ETCD_DATA = ETCD ~ '-data' %}


description "etcd containers"
author "Massimiliano Ravelli <m.ravelli@mastervoice.it>"


pre-start script
    # ETCD_DATA
    if ! docker inspect {{ ETCD_DATA }} > /dev/null 2>&1; then
        /usr/bin/docker create \
            --name {{ ETCD_DATA }} \
            --hostname {{ ETCD_DATA }} \
            --volume /data \
            busybox
    fi
    # ETCD
    if ! docker inspect {{ ETCD }} > /dev/null 2>&1; then
        /usr/bin/docker run \
            -d \
            --restart="always" \
            --name {{ ETCD }} \
            --hostname {{ ETCD }} \
            --volumes-from {{ ETCD_DATA }} \
            --volume /etc/container/etcd-server:/etc/openssl \
            --publish {{ etcd_server_client_port }}:2379 \
            --publish {{ etcd_server_peer_port }}:2380 \
            quay.io/coreos/etcd:{{ etcd_server_tag }} \
            --data-dir /data \
            --name {{ etcd_server_name }} \
{% if etcd_server_openssl_peer_ca is defined %}
            --peer-cert-file /etc/openssl/peer-cert-file \
            --peer-key-file /etc/openssl/peer-key-file \
            --peer-ca-file /etc/openssl/peer-trusted-ca-file \
{% endif %}
{% if etcd_server_openssl_client_ca is defined %}
            --cert-file /etc/openssl/client-cert-file \
            --key-file /etc/openssl/client-key-file \
            --ca-file /etc/openssl/client-trusted-ca-file \
{% endif %}
            --advertise-client-urls {% for name, node in etcd_server_node.items() %}{% if not loop.first %},{% endif %}{{ etcd_server_client_protocol }}://{{ node.host }}:{{ etcd_server_client_port }}{% endfor %} \
            --listen-client-urls {{ etcd_server_client_protocol }}://0.0.0.0:2379 \
            --initial-advertise-peer-urls {{ etcd_server_peer_protocol }}://{{ etcd_server_node[etcd_server_name]['ip'] }}:{{ etcd_server_peer_port }} \
            --listen-peer-urls {{ etcd_server_peer_protocol }}://0.0.0.0:2380 \
            --initial-cluster-token {{ etcd_server_cluster_token }} \
            --initial-cluster {% for name, node in etcd_server_node.items() %}{% if not loop.first %},{% endif %}{{ name }}={{ etcd_server_peer_protocol }}://{{ node.ip }}:{{ etcd_server_peer_port }}{% endfor %}

    fi
end script

post-stop script
    if docker inspect {{ ETCD }} > /dev/null 2>&1; then
        /usr/bin/docker rm -fv {{ ETCD }}
    fi
end script
