- name: os specific variables
  include_vars: "{{ ansible_lsb.id|lower() }}_{{ ansible_lsb.codename }}.yml"
  tags:
    - iptables
    - iptables-rules
    - iptables-rules-nosave


- include: debian.yml
  when: ansible_os_family == 'Debian'
  tags:
    - iptables


- name: rules directory
  file:
    path: rules
    dest: /var/lib/ansible/iptables
    state: directory
    mode: 0755
    owner: root
    group: root
  tags:
    - iptables


- name: /var/lib/ansible/iptables/rules
  template:
    src: rules
    dest: /var/lib/ansible/iptables/rules
    mode: 0755
    owner: root
    group: root
    backup: yes
  register: rules
  tags:
    - iptables
    - iptables-rules
    - iptables-rules-nosave


- name: reload rules
  command: /var/lib/ansible/iptables/rules
  when: rules.changed or iptables_force_reload
  tags:
    - iptables
    - iptables-rules
    - iptables-rules-nosave


- name: /etc/network/if-pre-up.d/000iptables-rules
  template:
    src: rules
    dest: /etc/network/if-pre-up.d/000iptables-rules
    mode: 0755
    owner: root
    group: root
    backup: no
  tags:
    - iptables
    - iptables-rules


- name: /etc/init/iptables-docker.conf
  template:
    src: upstart-iptables-docker.conf
    dest: /etc/init/iptables-docker.conf
    mode: 0644
    owner: root
    group: root
    backup: yes
  register: upstart
  when: iptables_docker_filter
  tags:
    - iptables
    - iptables-rules


- name: service iptables-docker restarted
  service:
    name: iptables-docker
    state: restarted
  when: iptables_docker_filter and (upstart.changed or iptables_force_reload)
  tags:
    - iptables
    - iptables-rules


- name: service iptables-docker started
  service:
    name: iptables-docker
    state: started
  when: iptables_docker_filter
  tags:
    - iptables
    - iptables-rules
