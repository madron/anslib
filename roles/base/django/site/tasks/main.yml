#
# Database
#
- name: '{{ django_site_slug }} - Database - required packages'
  apt: name={{ item }} state=present
  with_items:
  - postgresql
  - python-psycopg2
  - libpq-dev       # pip needs it to compile psycopg2
  when: django_site_db_name is defined
  tags:
    - django-site
    - django-site-database


- name: '{{ django_site_slug }} - Database - create user'
  postgresql_user: >
    user={{ django_site_db_user }}
    password={{ django_site_db_pass }}
  become: True
  become_user: postgres
  when: django_site_db_user is defined
  when: django_site_db_pass is defined
  tags:
    - django-site
    - django-site-database


- name: '{{ django_site_slug }} - Database - create database'
  postgresql_db: >
    name={{ django_site_db_name }}
    owner='{{ django_site_db_user }}'
    encoding='UTF-8'
    template='template0'
  become: True
  become_user: postgres
  register: create_database
  when: django_site_db_name is defined
  when: django_site_db_user is defined
  when: django_site_db_pass is defined
  tags:
    - django-site
    - django-site-database


#
# Application
#
- name: '{{ django_site_slug }} - Application - root directories'
  file: >
    path={{ item }}
    state=directory
    mode=0755
    owner=root
    group=root
  with_items:
  - /var/www/{{ django_site_slug }}/conf
  - /var/www/{{ django_site_slug }}/log
  - /var/www/{{ django_site_slug }}/website
  - /var/www/{{ django_site_slug }}/website/website
  tags:
    - django-site
    - django-site-application

- name: '{{ django_site_slug }} - Application - base directory'
  file: >
    path={{ django_site_base_dir }}/{{ django_site_slug }}/
    state=directory
    mode=0755
    owner={{ django_site_user }}
    group={{ django_site_group }}
  tags:
    - django-site
    - django-site-application


- name: '{{ django_site_slug }} - Application - static directory'
  file: >
    path={{ django_site_base_dir }}/{{ django_site_slug }}/static/
    state=directory
    mode=0755
    owner={{ django_site_user }}
    group={{ django_site_group }}
  tags:
    - django-site
    - django-site-application


- name: '{{ django_site_slug }} - Application - media directory'
  file: >
    path={{ django_site_base_dir }}/{{ django_site_slug }}/media/
    state=directory
    mode=2755
    owner={{ django_site_user }}
    group={{ django_site_server_group }}
  tags:
    - django-site
    - django-site-application


- name: '{{ django_site_slug }} - Application - www-data directories'
  file: >
    path={{ item }}
    state=directory
    mode=0755
    owner=www-data
    group=www-data
  with_items:
  - /var/www/{{ django_site_slug }}/log/uwsgi
  tags:
    - django-site
    - django-site-application


### Add bitbucket.org to known hosts

- name: '{{ django_site_slug }} - Application - hg repository'
  hg: >
    repo={{ django_site_hg_repo }}
    dest={{ django_site_base_dir }}/{{ django_site_slug }}/src
    revision={{ django_site_hg_rev }}
    purge=no
  register: hg_repository
  when: django_site_hg_repo is defined
  notify: 'reload uwsgi {{ django_site_slug }}'
  tags:
    - django-site
    - django-site-application


- name: '{{ django_site_slug }} - Application - install psycopg2'
  pip: >
    name=psycopg2
    version=2.5.2
    use_mirrors=no
    virtualenv={{ django_site_base_dir }}/{{ django_site_slug }}/env
  notify: 'reload uwsgi {{ django_site_slug }}'

- name: '{{ django_site_slug }} - Application - requirements file'
  pip: >
    requirements={{ django_site_base_dir }}/{{ django_site_slug }}/src/{{ django_site_requirements_file }}
    virtualenv={{ django_site_base_dir }}/{{ django_site_slug }}/env
  when: django_site_requirements_file is defined and hg_repository.changed
  notify: 'reload uwsgi {{ django_site_slug }}'
  tags:
    - django-site
    - django-site-application



#
# Site
#
- name: '{{ django_site_slug }} - Site - directories'
  file: >
    path={{ item }}
    state=directory
    mode=0755
    owner=root
    group=root
  with_items:
  - /var/www/{{ django_site_slug }}/website
  - /var/www/{{ django_site_slug }}/website/website
  - /var/www/{{ django_site_slug }}/website/website/fragments
  tags:
    - django-site
    - django-site-website


- name: '{{ django_site_slug }} - Site - manage.py'
  template: >
    src=website/manage.py
    dest=/var/www/{{ django_site_slug }}/website/
    mode=0755
  tags:
    - django-site
    - django-site-website


- name: '{{ django_site_slug }} - Site - __init__.py'
  template: >
    src=website/website/__init__.py
    dest=/var/www/{{ django_site_slug }}/website/website/
  tags:
    - django-site
    - django-site-website


- name: '{{ django_site_slug }} - Site - settings fragment 1 warning'
  template: >
    src=website/website/fragments/settings_1_warning.py
    dest=/var/www/{{ django_site_slug }}/website/website/fragments/settings_1_warning.py
  tags:
    - django-site
    - django-site-website


- name: '{{ django_site_slug }} - Site - settings fragment 2 custom'
  template: >
    src={{ item }}
    dest=/var/www/{{ django_site_slug }}/website/website/fragments/settings_2_custom.py
  with_first_found:
    - '{{ inventory_dir }}/../files/django/{{ django_site_slug }}/settings.py'
    - ../templates/website/website/fragments/settings_2_custom.py
  tags:
    - django-site
    - django-site-website


- name: '{{ django_site_slug }} - Site - settings fragment 3 auto'
  template: >
    src={{ item }}
    dest=/var/www/{{ django_site_slug }}/website/website/fragments/settings_3_auto.py
  with_first_found:
    - '{{ inventory_dir }}/../files/django/{{ django_site_slug }}/settings_override.py'
    - ../templates/website/website/fragments/settings_3_auto.py
  tags:
    - django-site
    - django-site-website


- name: '{{ django_site_slug }} - Site - compose settings file'
  assemble: >
    src=/var/www/{{ django_site_slug }}/website/website/fragments
    dest=/var/www/{{ django_site_slug }}/website/website/settings.py
    mode=644
    owner=root
    group=root
  notify: 'reload uwsgi {{ django_site_slug }}'
  tags:
    - django-site
    - django-site-website



- name: '{{ django_site_slug }} - Site - syncdb'
  django_manage: >
    command=syncdb
    virtualenv={{ django_site_base_dir }}/{{ django_site_slug }}/env
    app_path=/var/www/{{ django_site_slug }}/website
  tags:
    - django-site
    - django-site-website


- name: '{{ django_site_slug }} - Site - migrate'
  django_manage: >
    command=migrate
    virtualenv={{ django_site_base_dir }}/{{ django_site_slug }}/env
    app_path=/var/www/{{ django_site_slug }}/website
  when: django_site_use_south == 'yes'
  tags:
    - django-site
    - django-site-website


- name: '{{ django_site_slug }} - Site - initial fixtures'
  django_manage: >
    command=loaddata
    virtualenv={{ django_site_base_dir }}/{{ django_site_slug }}/env
    app_path=/var/www/{{ django_site_slug }}/website
    fixtures='{{ site_initial_fixtures }}'
  when: create_database.changed and site_initial_fixtures is defined
  tags:
    - django-site
    - django-site-website


- name: '{{ django_site_slug }} - Site - collect static'
  django_manage: >
    command=collectstatic
    virtualenv={{ django_site_base_dir }}/{{ django_site_slug }}/env
    app_path=/var/www/{{ django_site_slug }}/website
  tags:
    - django-site
    - django-site-website



#
# Permission
#
- name: '{{ django_site_slug }} - Permission - user_base directories owner'
  file: >
    path={{ item }}
    state=directory
    recurse=yes
    owner={{ django_site_user }}
    group={{ django_site_group }}
  with_items:
  - '{{ django_site_base_dir }}/{{ django_site_slug }}/env'
  - '{{ django_site_base_dir }}/{{ django_site_slug }}/src'
  - '{{ django_site_base_dir }}/{{ django_site_slug }}/static'
  tags:
    - django-site
    - django-site-website


#
# uwsgi
#
- name: '{{ django_site_slug }} - uwsgi - touch-to-reload file'
  template: >
    src=touch-to-reload
    dest=/var/www/{{ django_site_slug }}/conf/
    mode=0644
    owner={{ django_site_user }}
    group={{ django_site_group }}
  tags:
    - django-site
    - django-site-uwsgi


- name: '{{ django_site_slug }} - uwsgi - config'
  template: >
    src=uwsgi.ini
    dest=/var/www/{{ django_site_slug }}/conf/uwsgi.ini
    mode=0644
    owner=root
    group=root
  notify: 'reload uwsgi {{ django_site_slug }}'
  tags:
    - django-site
    - django-site-uwsgi


#
# Nginx
#
- name: '{{ django_site_slug }} - Nginx - config'
  template: >
    src={{ item }}
    dest=/var/www/{{ django_site_slug }}/conf/nginx.conf
  with_first_found:
    - '{{ inventory_dir }}/../files/django_sites/{{ django_site_slug }}/nginx.conf'
    - ../templates/nginx.conf
  notify:
  - reload nginx
  tags:
    - django-site
    - django-site-nginx


- name: '{{ django_site_slug }} - Nginx - nginx config symlink'
  file: >
    src=/var/www/{{ django_site_slug }}/conf/nginx.conf
    dest=/etc/nginx/sites-enabled/{{ django_site_slug }}.conf
    state=link
    force=yes
  notify:
  - reload nginx
  tags:
    - django-site
    - django-site-nginx

