# {{ ansible_managed }}

description "Prometheus dashboard"

start on filesystem and started docker

pre-start script
    # prometheus_dashboard_container
    if ! docker inspect {{ prometheus_dashboard_container }} > /dev/null 2>&1; then
        # Apply migrations
        /usr/bin/docker run \
            --rm \
            --name {{ prometheus_dashboard_migration_container }} \
            --volume /var/lib/container/{{ prometheus_dashboard_container }}:/data:rw \
            --env DATABASE_URL=sqlite3:/data/db.sqlite3 \
            {{ prometheus_dashboard_image }} ./bin/rake db:migrate
        # Run server
        /usr/bin/docker run \
            -d \
            --restart="always" \
            --name {{ prometheus_dashboard_container }} \
            --volume /var/lib/container/{{ prometheus_dashboard_container }}:/data:rw \
            --publish 0.0.0.0:{{ prometheus_dashboard_port }}:3000/tcp \
            --env DATABASE_URL=sqlite3:/data/db.sqlite3 \
            {{ prometheus_dashboard_image }}
    fi
end script

post-stop script
    if docker inspect {{ prometheus_dashboard_migration_container }} > /dev/null 2>&1; then
        response=$(docker inspect --format="{{ '{{' }} .State.Running {{ '}}' }}" {{ prometheus_dashboard_migration_container }})
        if "$response" == "true"; then
            /usr/bin/docker stop {{ prometheus_dashboard_migration_container }}
        fi
        /usr/bin/docker rm -fv {{ prometheus_dashboard_migration_container }}
    fi
    if docker inspect {{ prometheus_dashboard_container }} > /dev/null 2>&1; then
        response=$(docker inspect --format="{{ '{{' }} .State.Running {{ '}}' }}" {{ prometheus_dashboard_container }})
        if "$response" == "true"; then
            /usr/bin/docker stop {{ prometheus_dashboard_container }}
        fi
        /usr/bin/docker rm -fv {{ prometheus_dashboard_container }}
    fi
end script
