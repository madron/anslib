# {{ ansible_managed }}
{% set BASE = 'registry' %}
{% set REGISTRY = BASE ~ '-server' %}
{% set REGISTRY_AMBASSADOR = BASE ~ '-ambassador' %}
{% set REGISTRY_DATA = BASE ~ '-data' %}


description "registry containers"
author "Massimiliano Ravelli <m.ravelli@mastervoice.it>"


pre-start script
    # REGISTRY_AMBASSADOR
    if ! docker inspect {{ REGISTRY_AMBASSADOR }} > /dev/null 2>&1; then
        /usr/bin/docker run \
            -d \
            --restart="always" \
            --name {{ REGISTRY_AMBASSADOR }} \
            --hostname {{ REGISTRY_AMBASSADOR }} \
            --volume /var/run/docker.sock:/var/run/docker.sock \
            cpuguy83/docker-grand-ambassador --name {{ REGISTRY }}
    fi
    # REGISTRY_DATA
    if ! docker inspect {{ REGISTRY_DATA }} > /dev/null 2>&1; then
        /usr/bin/docker create \
            --name {{ REGISTRY_DATA }} \
            --hostname {{ REGISTRY_DATA }} \
            --volume /data \
            busybox
    fi
    # REGISTRY
    if ! docker inspect {{ REGISTRY }} > /dev/null 2>&1; then
        /usr/bin/docker run \
            -d \
            --restart="always" \
            --name {{ REGISTRY }} \
            --hostname {{ REGISTRY }} \
            --volumes-from {{ REGISTRY_DATA }} \
{% if registry_port is defined %}
            --publish {{ registry_port }}:5000 \
{% endif %}
{% for key in registry_options %}
            --env="{{ key }}={{ registry_options[key] }}" \
{% endfor %}
            registry:{{ registry_tag }}
    fi
end script

post-stop script
    if docker inspect {{ REGISTRY }} > /dev/null 2>&1; then
        /usr/bin/docker rm -fv {{ REGISTRY }}
    fi
end script
