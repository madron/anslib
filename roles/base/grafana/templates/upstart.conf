# {{ ansible_managed }}

description "Grafana"

start on filesystem and started docker

pre-start script
    # grafana_container
    if ! docker inspect {{ grafana_container }} > /dev/null 2>&1; then
        /usr/bin/docker run \
            -d \
            --restart="always" \
            --name {{ grafana_container }} \
            --volume /var/lib/container/{{ grafana_container }}:/var/lib/grafana:rw \
            --volume /etc/container/{{ grafana_container }}/dashboards:/var/lib/grafana/dashboards:ro \
            --publish 0.0.0.0:{{ grafana_port }}:3000/tcp \
            --env GF_SERVER_DOMAIN={{ grafana_server_domain }} \
            --env GF_SERVER_ENFORCE_DOMAIN={{ grafana_server_enforce_domain }} \
            --env GF_SERVER_ROOT_URL='{{ grafana_server_root_url }}' \
            --env GF_USERS_ALLOW_SIGN_UP={{ grafana_users_allow_sign_up }} \
            --env GF_USERS_ALLOW_ORG_CREATE={{ grafana_users_allow_org_create }} \
            --env GF_USERS_AUTO_ASSIGN_ORG={{ grafana_users_auto_assign_org }} \
            --env GF_USERS_AUTO_ASSIGN_ORG_ROLE={{ grafana_users_auto_assign_org_role }} \
            --env GF_AUTH_ANONYMOUS_ENABLED={{ grafana_auth_anonymous_enabled }} \
            --env GF_AUTH_ANONYMOUS_ORG_NAME='{{ grafana_auth_anonymous_org_name }}' \
            --env GF_AUTH_ANONYMOUS_ORG_ROLE={{ grafana_auth_anonymous_org_role }} \
            --env GF_AUTH_GOOGLE_ENABLED={{ grafana_auth_google_enabled }} \
            --env GF_AUTH_GOOGLE_ALLOW_SIGN_UP={{ grafana_auth_google_allow_sign_up }} \
            --env GF_AUTH_GOOGLE_CLIENT_ID={{ grafana_auth_google_client_id }} \
            --env GF_AUTH_GOOGLE_CLIENT_SECRET={{ grafana_auth_google_client_secret }} \
            --env GF_AUTH_GOOGLE_ALLOWED_DOMAINS='{{ grafana_auth_google_allowed_domains|join(' ') }}' \
            --env GF_DASHBOARDS_JSON_ENABLED={{ grafana_dashboards_json_enabled }} \
            --env GF_EXTERNAL_IMAGE_STORAGE_PROVIDER={{ grafana_external_image_storage_provider }} \
            {{ grafana_image }}
    fi
end script

post-stop script
    if docker inspect {{ grafana_container }} > /dev/null 2>&1; then
        response=$(docker inspect --format="{{ '{{' }} .State.Running {{ '}}' }}" {{ grafana_container }})
        if "$response" == "true"; then
            /usr/bin/docker stop {{ grafana_container }}
        fi
        /usr/bin/docker rm -fv {{ grafana_container }}
    fi
end script
