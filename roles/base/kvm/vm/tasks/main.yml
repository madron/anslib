- name: os specific variables
  include_vars: "{{ ansible_lsb.id|lower() }}_{{ ansible_lsb.codename }}.yml"
  tags:
    - kvm-vm


- name: required directories
  file:
    path: '{{ item }}'
    state: directory
    mode: 0755
    owner: root
    group: root
  with_items:
    - /var/lib/libvirt/config
    - /var/lib/libvirt/download
  tags:
    - kvm-vm


- name: images directories
  file:
    path: '{{ item.value }}'
    state: directory
    mode: 0755
    owner: root
    group: root
  with_dict: pool
  tags:
    - kvm-vm


- name: download cloud images
  get_url:
    url: '{{ item.url }}'
    dest: '/var/lib/libvirt/download/{{ item.name }}.img'
  with_items: images
  tags:
    - kvm-vm


- name: convert cloud images to qcow2
  command: 'qemu-img convert -O qcow2 {{ item.name }}.img {{ item.name }}.qcow2'
  args:
    chdir: /var/lib/libvirt/download
    creates: '/var/lib/libvirt/download/{{ item.name }}.qcow2'
  with_items: images
  tags:
    - kvm-vm


- name: root disk image
  shell: 'cp ../download/{{ item.image }}.qcow2 {{ item.name }}.qcow2 && qemu-img resize {{ item.name }}.qcow2 {{ item.disk_gb|default(disk_gb) }}G'
  args:
    chdir: '{{ pool.get(item.pool|default(1)) }}'
    creates: '{{ pool.get(item.pool|default(1)) }}/{{ item.name }}.qcow2'
  with_items: hosts
  tags:
    - kvm-vm


- name: cloud-config
  template:
    src: cloud-config.yml
    dest: '/var/lib/libvirt/config/{{ item.name }}.yml'
    mode: 0644
    owner: root
    group: root
  with_items: hosts
  tags:
    - kvm-vm


- name: config disk image
  command: 'cloud-localds {{ pool.get(item.pool|default(1)) }}/{{ item.name }}.img {{ item.name }}.yml'
  args:
    chdir: /var/lib/libvirt/config
    creates: '{{ pool.get(item.pool|default(1)) }}/{{ item.name }}.img'
  with_items: hosts
  tags:
    - kvm-vm


- name: define vm
  virt:
    name: '{{ item.name }}'
    command: define
    xml: "{{ lookup('template', '../templates/host.xml') }}"
  with_items: hosts
  tags:
    - kvm-vm


- name: autostart vm
  virt:
    name: '{{ item.name }}'
    command: autostart
    state: running
  with_items: hosts
  tags:
    - kvm-vm
