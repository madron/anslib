# {{ ansible_managed }}

description "Qemu vm {{ item.name }}"

start on filesystem and started docker

{% set container = item.name %}


# docker run -it --rm --name {{ container }} -v /var/lib/libvirt/images:/data ianblenke/kvm bash

# qemu-system-x86_64 -enable-kvm -name mtr-ldap -S -machine pc-0.12,accel=kvm,usb=off -m 512 -realtime mlock=off -smp 1,sockets=1,cores=1,threads=1 -uuid 5bc5cf7b-f0b3-8751-8266-dd631d37d4a6 -no-user-config -nodefaults -chardev socket,id=charmonitor,path=/var/lib/libvirt/qemu/mtr-ldap.monitor,server,nowait -mon chardev=charmonitor,id=monitor,mode=control -rtc base=utc -no-shutdown -boot strict=on -device piix3-usb-uhci,id=usb,bus=pci.0,addr=0x1.0x2 -drive file=/var/lib/libvirt/images/mtr-ldap.img,if=none,id=drive-virtio-disk0,format=qcow2 -device virtio-blk-pci,scsi=off,bus=pci.0,addr=0x5,drive=drive-virtio-disk0,id=virtio-disk0,bootindex=1 -drive if=none,id=drive-ide0-1-0,readonly=on,format=raw -device ide-cd,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0 -netdev tap,fd=27,id=hostnet0,vhost=on,vhostfd=31 -device virtio-net-pci,netdev=hostnet0,id=net0,mac=52:54:00:3a:d3:4d,bus=pci.0,addr=0x3 -chardev pty,id=charserial0 -device isa-serial,chardev=charserial0,id=serial0 -device usb-tablet,id=input0 -vnc 127.0.0.1:6 -device cirrus-vga,id=video0,bus=pci.0,addr=0x2 -device ES1370,id=sound0,bus=pci.0,addr=0x4 -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x6

pre-start script
    if ! docker inspect {{ container }} > /dev/null 2>&1; then
        /usr/bin/docker run \
            -d \
            --restart="always" \
            --name {{ container }} \
            ianblenke/kvm qemu-system-x86_64 \
            -enable-kvm
            -name {{ item.name }}
            -S
            -machine pc-0.12,accel=kvm,usb=off
            -m 512
            -realtime mlock=off
            -smp 1,sockets=1,cores=1,threads=1
            -uuid 5bc5cf7b-f0b3-8751-8266-dd631d37d4a6
            -no-user-config
            -nodefaults
            -rtc base=utc
            -no-shutdown
            -boot strict=on
            -device piix3-usb-uhci,id=usb,bus=pci.0,addr=0x1.0x2
            -drive file=/data/{{ item.name }}.qcow2,if=none,id=drive-virtio-disk0,format=qcow2
            -device virtio-blk-pci,scsi=off,bus=pci.0,addr=0x5,drive=drive-virtio-disk0,id=virtio-disk0,bootindex=1
            -drive if=none,id=drive-ide0-1-0,readonly=on,format=raw
            -device ide-cd,bus=ide.1,unit=0,drive=drive-ide0-1-0,id=ide0-1-0
            -netdev tap,fd=27,id=hostnet0,vhost=on,vhostfd=31
            -device virtio-net-pci,netdev=hostnet0,id=net0,mac=52:54:00:3a:d3:4d,bus=pci.0,addr=0x3
            -chardev pty,id=charserial0
            -device isa-serial,chardev=charserial0,id=serial0
            -device usb-tablet,id=input0
            -vnc 127.0.0.1:6
            -device cirrus-vga,id=video0,bus=pci.0,addr=0x2
            -device ES1370,id=sound0,bus=pci.0,addr=0x4
            -device virtio-balloon-pci,id=balloon0,bus=pci.0,addr=0x6
    fi
end script

post-stop script
    if docker inspect {{ container }} > /dev/null 2>&1; then
        response=$(docker inspect --format="{{ '{{' }} .State.Running {{ '}}' }}" {{ container }})
        if "$response" == "true"; then
            /usr/bin/docker stop {{ container }}
        fi
        /usr/bin/docker rm -fv {{ container }}
    fi
end script
