docker build -t mtek/postgres:9.1 roles/docker/mtek/postgres/9.1/files/docker/

# remove db volume
docker rm -v postgres_data

# db volume
docker create --name postgres_data -v /var/lib/postgresql/data busybox

# Run server
docker run -it --rm --name postgres --volumes-from postgres_data -e allowed_networks=172.17.0.0/16,192.168.1.0/24 mtek/postgres:9.1

# Update pg_hba.conf (postgres will be reloaded)
docker run -it --rm --volumes-from postgres -e allowed_networks=172.17.0.0/16 mtek/postgres:9.1 pg_hba

# Backup to /tmp
docker run -it --rm --volumes-from postgres -v /tmp:/backup mtek/postgres:9.1 backup --overwrite

# restore backup from /tmp
docker stop postgres
docker run -it --rm --volumes-from postgres -v /tmp:/backup:ro mtek/postgres:9.1 restore
docker start postgres

# psql
docker run -it --rm --volumes-from postgres mtek/postgres:9.1 psql
docker run -it --rm --volumes-from postgres mtek/postgres:9.1 psql -c "CREATE DATABASE test;"



#
# Streaming replication
#

# remove db volume
docker rm -v db_master_data
docker rm -v db_slave_data

# db volume
docker create --name db_master_data -v /var/lib/postgresql/data busybox
docker create --name db_slave_data  -v /var/lib/postgresql/data busybox

# Start master
docker run -it --rm --name db_master --volumes-from db_master_data -e wal_keep_segments=20 -e allowed_replication_networks=172.17.0.0/16 mtek/postgres:9.1

# Backup master -> restore slave data volume
docker run -it --rm --volumes-from db_master -v /tmp:/backup mtek/postgres:9.1 backup --overwrite
docker run -it --rm --volumes-from db_slave_data  -v /tmp:/backup:ro mtek/postgres:9.1 restore

# Start slave
docker run -it --rm --name db_slave --volumes-from db_master_data --link db_master:master -e master_server=master mtek/postgres:9.1
