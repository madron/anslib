k8s_hyperkube_image_url: quay.io/coreos/hyperkube
k8s_hyperkube_image_tag: v1.10.3_coreos.0
k8s_certs_dir: 'k8s-certs'

k8s_domain: example.com
k8s_api_host: k8s-api.example.com

# Workers
k8s_worker_hosts: []

# The address of the master node.
# In most cases this will be the publicly routable IP of the node.
# Worker nodes must be able to reach the master node(s) via this address on port 443.
# Additionally, external clients (such as an administrator using kubectl) will also need access,
# since this will run the Kubernetes API endpoint.
k8s_master_hosts: []

# List of etcd machines.
# If you're running a cluster of 5 machines, list them all here.
k8s_etcd_endpoints: []

# Etcd protocol schema
k8s_etcd_protocol: https

# The CIDR network to use for pod IPs.
# Each pod launched in the cluster will be assigned an IP out of this range.
# This network must be routable between all hosts in the cluster.
# In a default installation, the flannel overlay network will provide routing to this network.
k8s_pod_network: 10.2.0.0/16

# The CIDR network to use for service cluster VIPs (Virtual IPs).
# Each service will be assigned a cluster IP out of this range.
# This must not overlap with any IP ranges assigned to the POD_NETWORK,
# or other existing network infrastructure.
# Routing to these VIPs is handled by a local kube-proxy service to each host,
# and are not required to be routable between hosts.
k8s_service_ip_range: 10.3.0.0/24

# The VIP (Virtual IP) address of the Kubernetes API Service.
# If the SERVICE_IP_RANGE is changed above, this must be set to the first IP in that range.
k8s_service_ip: 10.3.0.1

# The VIP (Virtual IP) address of the cluster DNS service.
# This IP must be in the range of the SERVICE_IP_RANGE and cannot be the first IP in the range.
# This same IP must be configured on all worker nodes to enable DNS service discovery.
k8s_dns_service_ip: 10.3.0.10
