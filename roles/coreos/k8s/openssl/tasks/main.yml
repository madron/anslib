- name: Cluster Root CA - key
  command: openssl genrsa -out cluster_key.pem 2048
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'cluster_key.pem'
  tags: k8s-openssl

- name: Cluster Root CA - cert
  command: openssl req -x509 -new -nodes -key cluster_key.pem -days 10000 -out cluster_crt.pem -subj "/CN=kube-ca"
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'cluster_crt.pem'
  tags: k8s-openssl



- name: Kubernetes API Server - openssl.cnf
  template:
    src: api_openssl.cnf
    dest: '{{ k8s_certs_dir }}/api_openssl.cnf'
    mode: 0644
    backup: yes
  register: api
  tags: k8s-openssl

- name: Kubernetes API Server - key
  command: openssl genrsa -out api_key.pem 2048
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'api_key.pem'
  tags: k8s-openssl

- name: Kubernetes API Server - csr
  command: openssl req -new -key api_key.pem -out api.csr -subj "/CN=kube-apiserver" -config api_openssl.cnf
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'api.csr'
  tags: k8s-openssl

- name: Kubernetes API Server - cert
  command: openssl x509 -req -in api.csr -CA cluster_crt.pem -CAkey cluster_key.pem -CAcreateserial -out api_crt.pem -days 3650 -extensions v3_req -extfile api_openssl.cnf
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'api_crt.pem'
  tags: k8s-openssl



- name: Cluster Administrator - key
  command: openssl genrsa -out admin_key.pem 2048
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'admin_key.pem'
  tags: k8s-openssl

- name: Cluster Administrator - csr
  command: openssl req -new -key admin_key.pem -out admin.csr -subj "/CN=kube-admin"
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'admin.csr'
  tags: k8s-openssl

- name: Cluster Administrator - cert
  command: openssl x509 -req -in admin.csr -CA cluster_crt.pem -CAkey cluster_key.pem -CAcreateserial -out admin_crt.pem -days 3650
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'admin_crt.pem'
  tags: k8s-openssl



- name: Worker - openssl.cnf
  template:
    src: worker_openssl.cnf
    dest: '{{ k8s_certs_dir }}/worker_{{ item }}_openssl.cnf'
    mode: 0644
    backup: yes
  with_items: '{{ k8s_worker_hosts }}'
  register: worker
  tags: k8s-openssl

- name: Worker - key
  command: 'openssl genrsa -out worker_{{ item }}_key.pem 2048'
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'worker_{{ item }}_key.pem'
  with_items: '{{ k8s_worker_hosts }}'
  tags: k8s-openssl

- name: Worker - csr
  command: 'openssl req -new -key worker_{{ item }}_key.pem -out worker_{{ item }}.csr -subj "/CN={{ item }}.{{ k8s_domain }}" -config worker_{{ item }}_openssl.cnf'
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'worker_{{ item }}.csr'
  with_items: '{{ k8s_worker_hosts }}'
  tags: k8s-openssl

- name: Worker - cert
  command: 'openssl x509 -req -in worker_{{ item }}.csr -CA cluster_crt.pem -CAkey cluster_key.pem -CAcreateserial -out worker_{{ item }}_crt.pem -days 3650 -extensions v3_req -extfile worker_{{ item }}_openssl.cnf'
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'worker_{{ item }}_crt.pem'
  with_items: '{{ k8s_worker_hosts }}'
  tags: k8s-openssl
