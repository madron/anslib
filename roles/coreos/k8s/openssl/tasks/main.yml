- name: set fact
  set_fact:
    node_hosts: '{{ k8s_worker_hosts + k8s_master_hosts }}'
  tags: k8s-openssl

- name: create certs directory
  file:
    path: '{{ k8s_certs_dir }}'
    state: directory
  tags: k8s-openssl



- name: Cluster Root CA - key
  command: openssl genrsa -out ca.key 2048
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'ca.key'
  tags: k8s-openssl

- name: Cluster Root CA - cert
  command: openssl req -x509 -new -nodes -key ca.key -days 3650 -out ca.crt -subj "/CN=kube-ca"
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'ca.crt'
  tags: k8s-openssl



- name: Kubernetes API Server - openssl configuration
  template:
    src: apiserver.cnf
    dest: '{{ k8s_certs_dir }}/apiserver-{{ item }}.cnf'
    mode: 0644
  with_items: '{{ k8s_master_hosts }}'
  tags: k8s-openssl

- name: Kubernetes API Server - key
  command: openssl genrsa -out apiserver-{{ item }}.key 2048
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'apiserver-{{ item }}.key'
  with_items: '{{ k8s_master_hosts }}'
  tags: k8s-openssl

- name: Kubernetes API Server - csr
  command: openssl req -new -key apiserver-{{ item }}.key -out apiserver-{{ item }}.csr -subj "/CN=kube-apiserver" -config apiserver-{{ item }}.cnf
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'apiserver-{{ item }}.csr'
  with_items: '{{ k8s_master_hosts }}'
  tags: k8s-openssl

- name: Kubernetes API Server - cert
  command: openssl x509 -req -in apiserver-{{ item }}.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out apiserver-{{ item }}.crt -days 3650 -extensions v3_req -extfile apiserver-{{ item }}.cnf
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'apiserver-{{ item }}.crt'
  with_items: '{{ k8s_master_hosts }}'
  tags: k8s-openssl



- name: Cluster Administrator - key
  command: openssl genrsa -out admin.key 2048
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'admin.key'
  tags: k8s-openssl

- name: Cluster Administrator - csr
  command: openssl req -new -key admin.key -out admin.csr -subj "/CN=kube-admin"
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'admin.csr'
  tags: k8s-openssl

- name: Cluster Administrator - cert
  command: openssl x509 -req -in admin.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out admin.crt -days 3650
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'admin.crt'
  tags: k8s-openssl



- name: Node - openssl configuration
  template:
    src: node.cnf
    dest: '{{ k8s_certs_dir }}/node-{{ item }}.cnf'
    mode: 0644
  with_items: '{{ node_hosts }}'
  register: worker
  tags: k8s-openssl

- name: Node - key
  command: 'openssl genrsa -out node-{{ item }}.key 2048'
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'node-{{ item }}.key'
  with_items: '{{ node_hosts }}'
  tags: k8s-openssl

- name: Node - csr
  command: 'openssl req -new -key node-{{ item }}.key -out node-{{ item }}.csr -subj "/CN={{ item }}.{{ k8s_domain }}" -config node-{{ item }}.cnf'
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'node-{{ item }}.csr'
  with_items: '{{ node_hosts }}'
  tags: k8s-openssl

- name: Node - cert
  command: 'openssl x509 -req -in node-{{ item }}.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out node-{{ item }}.crt -days 3650 -extensions v3_req -extfile node-{{ item }}.cnf'
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'node-{{ item }}.crt'
  with_items: '{{ node_hosts }}'
  tags: k8s-openssl
