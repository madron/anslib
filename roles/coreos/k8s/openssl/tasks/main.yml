- name: Cluster Root CA - key
  command: openssl genrsa -out ca-key.pem 2048
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'ca-key.pem'
  tags: k8s-openssl

- name: Cluster Root CA - cert
  command: openssl req -x509 -new -nodes -key ca-key.pem -days 10000 -out ca.pem -subj "/CN=kube-ca"
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'ca.pem'
  tags: k8s-openssl



- name: Kubernetes API Server - openssl.cnf
  template:
    src: openssl.cnf
    dest: '{{ k8s_certs_dir }}/openssl.cnf'
    mode: 0644
    backup: yes
  register: api
  tags: k8s-openssl

- name: Kubernetes API Server - key
  command: openssl genrsa -out apiserver-key.pem 2048
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'apiserver-key.pem'
  tags: k8s-openssl

- name: Kubernetes API Server - csr
  command: openssl req -new -key apiserver-key.pem -out apiserver.csr -subj "/CN=kube-apiserver" -config openssl.cnf
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'apiserver.csr'
  tags: k8s-openssl

- name: Kubernetes API Server - cert
  command: openssl x509 -req -in apiserver.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out apiserver.pem -days 3650 -extensions v3_req -extfile openssl.cnf
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'apiserver.pem'
  tags: k8s-openssl



- name: Cluster Administrator - key
  command: openssl genrsa -out admin-key.pem 2048
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'admin-key.pem'
  tags: k8s-openssl

- name: Cluster Administrator - csr
  command: openssl req -new -key admin-key.pem -out admin.csr -subj "/CN=kube-admin"
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'admin.csr'
  tags: k8s-openssl

- name: Cluster Administrator - cert
  command: openssl x509 -req -in admin.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin.pem -days 3650
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: 'admin.pem'
  tags: k8s-openssl



- name: Worker - openssl.cnf
  template:
    src: worker-openssl.cnf
    dest: '{{ k8s_certs_dir }}/{{ item }}-worker-openssl.cnf'
    mode: 0644
    backup: yes
  with_items: '{{ k8s_worker_hosts }}'
  register: worker
  tags: k8s-openssl

- name: Worker - key
  command: 'openssl genrsa -out {{ item }}-worker-key.pem 2048'
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: '{{ item }}-worker-key.pem'
  with_items: '{{ k8s_worker_hosts }}'
  tags: k8s-openssl

- name: Worker - csr
  command: 'openssl req -new -key {{ item }}-worker-key.pem -out {{ item }}-worker.csr -subj "/CN={{ item }}.{{ k8s_domain }}" -config {{ item }}-worker-openssl.cnf'
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: '{{ item }}-worker.csr'
  with_items: '{{ k8s_worker_hosts }}'
  tags: k8s-openssl

- name: Worker - cert
  command: 'openssl x509 -req -in {{ item }}-worker.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out {{ item }}-worker.pem -days 3650 -extensions v3_req -extfile {{ item }}-worker-openssl.cnf'
  args:
    chdir: '{{ k8s_certs_dir }}'
    creates: '{{ item }}-worker.pem'
  with_items: '{{ k8s_worker_hosts }}'
  tags: k8s-openssl
