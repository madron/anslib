- name: arm64
  set_fact:
    k8s_cni_arch: arm64
  when: ansible_architecture|default('x86_64') == 'armv7l'


- name: binary list
  set_fact:
    binary_list:
      - bandwidth
      - bridge
      - dhcp
      - firewall
      - flannel
      - host-device
      - host-local
      - ipvlan
      - loopback
      - macvlan
      - portmap
      - ptp
      - sbr
      - static
      - tuning
      - vlan


- name: '/opt/kubernetes/cni-{{ k8s_cni_release }} directory'
  file:
    path: '/opt/kubernetes/cni-{{ k8s_cni_release }}'
    state: directory


- name: download
  unarchive:
    src: 'https://github.com/containernetworking/plugins/releases/download/{{ k8s_cni_release }}/cni-plugins-linux-{{ k8s_cni_arch }}-{{ k8s_cni_release }}.tgz'
    dest: /opt/kubernetes/cni-{{ k8s_cni_release }}
    remote_src: yes


- name: symlink to /usr/local/bin
  file:
    src: '/opt/kubernetes/cni-{{ k8s_cni_release }}/{{ item }}'
    dest: '/usr/local/bin/{{ item }}'
    state: link
    owner: root
    group: root
  with_items: '{{ binary_list }}'
  register: binary


- name: br_netfilter kernel module
  modprobe:
    name: br_netfilter
    state: present


- name: net.bridge.bridge-nf-call-iptables
  sysctl:
    name: net.bridge.bridge-nf-call-iptables
    value: 1
    state: present


- name: net.ipv4.ip_forward
  sysctl:
    name: net.ipv4.ip_forward
    value: 1
    state: present


- name: net.ipv4.neigh.default.gc_thresh
  sysctl:
    name: '{{ item.name }}'
    value: '{{ item.value }}'
    state: present
  with_items:
    - { name: net.ipv4.neigh.default.gc_thresh1, value: '{{ k8s_common_cni_net_ipv4_neigh_default_gc_thresh1 }}' }
    - { name: net.ipv4.neigh.default.gc_thresh2, value: '{{ k8s_common_cni_net_ipv4_neigh_default_gc_thresh1 * 4 }}' }
    - { name: net.ipv4.neigh.default.gc_thresh3, value: '{{ k8s_common_cni_net_ipv4_neigh_default_gc_thresh1 * 8 }}' }
